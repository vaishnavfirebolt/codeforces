package day52;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
import java.util.Collections;
import java.util.StringTokenizer;
 
public class Codeforces620B {
 
	static public int dp[];
	static int max = (int)1e6 + 7;
	
	public static void main(String[] args) {
		FastScanner sc=new FastScanner();
		int a = sc.nextInt() , b = sc.nextInt();
		dp = new int[max];
		dp[0] = 6;
		dp[1] = 2;
		dp[2] = 5;
		dp[3] = 5;
		dp[4] = 4;
		dp[5] = 5;
		dp[6] = 6;
		dp[7] = 3;
		dp[8] = 7;
		dp[9] = 6;
		long ans = 0;
		for(int i = a ; i <= b ;i++) {
			ans += perCount(i);
		}
		System.out.println(ans);
	}
	static int perCount(int a) {
		if(a<10) {
			return dp[a];
		}
		//subProblem
		int count = dp[a%10] + perCount(a/10);
		
		return dp[a] = count;
	}
	
	public void sort(int[] a) {
		ArrayList<Integer> l=new ArrayList<>();
		for (int i:a) l.add(i);
		Collections.sort(l);
		for (int i=0; i<a.length; i++) a[i]=l.get(i);
	}
	
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		
		long nextLong() {
			return Long.parseLong(next());
		}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
 
}



