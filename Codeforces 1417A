import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class D {
	
	public static void main(String[] args) {
		FastScanner sc = new FastScanner();
		int te = sc.nextInt();
	outer:	for(int tt =0 ; tt < te; tt++) {
			int n = sc.nextInt();
			int k = sc.nextInt();
			int a[] = sc.readArray(n);
			Arrays.sort(a);
			if(a[0] >= k) {
				System.out.println(1);
				continue outer;
			}else {
				long ans = 0;
				for(int i = n -1 ; i > 0 ;i--) {
					if(k - a[i] > 0) {
						ans += (k - a[i])/a[0];
//						System.out.println(ans + " " + tt);
					}
				}
				System.out.println(ans);
			}
			
		}
	}
	
	
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}

		public long nextLong() {return Long.parseLong(next());}
 
		public double nextDouble() {return Double.parseDouble(next());}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
}
