package dfsAndSimilar;

import java.util.Scanner;
import java.awt.Point;

public class Codeforces217A {
	static boolean visited[];
	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		int n  = sc.nextInt();
		Point p[] = new Point[n];
		for(int i = 0 ; i <  n ;i++) {
			p[i] = new Point(sc.nextInt() , sc.nextInt());
		}
		int count = 0 ;
		visited = new boolean[n];
		for(int i = 0 ; i  <n ; i++) {
			if(!visited[i]) {
				dfs(i,n,p);
				count++;
			}
		}
		System.out.println(count-1);
		sc.close();
	}

	static void dfs(int index , int n , Point[] p) {
		visited[index] = true;
		Point cp = p[index];
		
		for(int i = 0 ; i < n ; i++) {
			if(!visited[i] ) {
				if(p[i].x == cp.x || p[i].y == cp.y) {
					dfs(i,n,p);
				}
			}
		}
	}
}
