package binaryTrees;
import java.util.*;

public class invertBinaryTree {

	class Node{
		int data;
		Node left;
		Node right;
		Node(int data){
			this.data = data;
			this.left = null;
			this.right = null;
		}	}
	
	public static Node invertTrees(Node root) {
		if (root == null) return root;
		
		Node left = invertTrees(root.left);
		Node right = invertTrees(root.right);
		
		root.left =  right;
		root.right = left;
		
		return root;
	}
	
	public static Node inverttree(Node root) {
		Queue<Node> auxiliary = new LinkedList<>();
		
	    auxiliary.add(root);
		while(!auxiliary.isEmpty()) {
			Node current = auxiliary.poll();
			
			Node temp = root.left;
			current.left =  root.right;
			current.right = temp;
			
			auxiliary.add(current.left);
			auxiliary.add(current.right);
		}
		
		return  root;
	}
}



















