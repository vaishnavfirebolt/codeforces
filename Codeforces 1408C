import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.util.*;

public class C {
	
	public static void main(String[] args) {
		FastScanner sc = new FastScanner();
		int t = sc.nextInt();
		for(int tt = 0; tt < t ;tt++) {
			int n  = sc.nextInt() , l = sc.nextInt();
			int a[] = sc.readArray(n);
			
			int i = 0 ; int j = n-1;
			double time = 0;
			
			int firstSpeed = 1 ; int SecondSpeed = 1;
			double firstDistance = 0; double secondDistance = l;
			while(i <= j) {
				double distanceFirst = a[i] - firstDistance;
				double dist2 = secondDistance - a[j];
				
				if(distanceFirst / firstSpeed < dist2 / SecondSpeed) {
					time += distanceFirst / firstSpeed;
					firstDistance = a[i];
					i++;
					secondDistance -= (distanceFirst / firstSpeed) * SecondSpeed;
					firstSpeed++;
				}
				else if(distanceFirst / firstSpeed > dist2 / SecondSpeed){
					time += dist2 / SecondSpeed;
					secondDistance = a[j];
					j--;
					firstDistance += (dist2 / SecondSpeed) * firstSpeed;
					SecondSpeed++;
				}else {
					time += dist2 / SecondSpeed;
					secondDistance = a[j];
					j--;
					firstDistance = a[i];
					i++;
					firstSpeed++;
					SecondSpeed++;
				}
						
			}
			double Distance = secondDistance - firstDistance;
			time+= Distance / (firstSpeed + SecondSpeed);
			
			System.out.println(BigDecimal.valueOf(time)+"");
		}
	}	
	 
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
	
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}

		public long nextLong() {return Long.parseLong(next());}
 
		public double nextDouble() {return Double.parseDouble(next());}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
}
