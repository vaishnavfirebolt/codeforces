package dynamicProgramming;
import java.util.*;
public class LongestCommonSubsequence {
	
	static int LCS( char[] a, char[] b, int n, int m ) {
		int dp[][] = new int[n+1][m+1];
		for(int i =0 ; i <= n ; i++) {
			for(int j = 0 ; j <= m ;j++) {
				if(i == 0 || j == 0) {
					dp[i][j] = 0;
				}else if(a[i-1] == b[j-1]){
					dp[i][j] = 1 + dp[i-1][j-1];
				}else {
					dp[i][j] = Math.max(dp[i-1][j], dp[i][j-1]);
				}
			}
		}return dp[n][m];
	}
	 
	public static void main(String[] args) {
		Scanner fs=new Scanner(System.in);
		String a = fs.next();
		String b = fs.next();
		System.out.println(LCS(a.toCharArray(),b.toCharArray(),a.length(),b.length()));
		fs.close();
	}
 
}
