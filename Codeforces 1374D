package day21;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
import java.util.Collections;
import java.util.StringTokenizer;
 
public class Codeforces1374D {
 
	public static void main(String[] args) {
		FastScanner fs=new FastScanner();
		int T=fs.nextInt();
		for (int tt=0; tt<T; tt++) {
			int n = fs.nextInt();
			int k = fs.nextInt();
			int a[] = new int[n];
			for(int i =0 ; i < n ;i++) {
				a[i] = fs.nextInt() % k;
			}
			Arrays.sort(a);
			long ans ;
			long count =1;
			if(a[0] == 0)ans = 0;
		
			else ans = (k*1) - a[0];
			for(int i = 1 ;i < n ;i++) {
				if(a[i] == a[i-1]) {
					count++;
				}else count = 1;
				if(a[i]!= 0) {
					ans = Math.max(ans, (k * count) - a[i]);
				}
			}
			if(ans == 0)System.out.println(ans);
			else System.out.println(ans + 1);
		}
		
	}
	
	public void sort(int[] a) {
		ArrayList<Integer> l=new ArrayList<>();
		for (int i:a) l.add(i);
		Collections.sort(l);
		for (int i=0; i<a.length; i++) a[i]=l.get(i);
	}
	
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
 
}
