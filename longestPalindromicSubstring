package Strings;

public class longestpalindromicsubstring {

	public static int longestPalindromicSubstring(String str) {
	
		if(str.length() == 0 || str == null )return 0;
		if(str.length() == 1) return 1;
 		int maxLength = 1;
		
		for(int i = 1; i < str.length() -1; i++) {
			int length = 1;
			int length2 = 0;
			int low = i-1;
			int high = i+1;
			while( low >= 0 && high < str.length()) {
				if(str.charAt(low) == str.charAt(high)) {
				length++ ; 
				length++;
				low--;
				high++;}
				else break;
			}

			low = i-1;
			high = i;
			while( low >= 0 && high < str.length() ) {
				if(str.charAt(low) == str.charAt(high)) {				
				length2++;
				length2++;
				low--;
				high++;}
				else break;
			}
			
			maxLength = Math.max(Math.max(length,length2),maxLength);
			
		}
		return maxLength;
	}
	
	public static void main(String[] args) {
		String str = "aabaabaab";
		System.out.println(longestPalindromicSubstring(str));
	}
}
