import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;


public class C {
	public static void main(String[] args) {
		FastScanner sc = new FastScanner();
		int  t = sc.nextInt();
		for(int tt= 0 ; tt < t ;tt++) {
			int n = sc.nextInt() , x = sc.nextInt() , y = sc.nextInt();
			//generating all possible answers
			int ans[] = null;
			int max = Integer.MAX_VALUE;
			for(int i = 1 ; i <= 50 ; i++) {
				for(int j = 1 ; j < 50 ; j++) {
					int a[] = get(n , i , j);
					boolean hasx = false , hasy = false;
					for(int item : a) {
						if(item == x)hasx = true;
						if(item == y)hasy = true;
					}
					if(hasx && hasy) {
						if(a[n-1] < max) {
							ans = a;
							max = ans[n-1];
						}
					}
					
				}
			}
			for(int i  : ans) {
				System.out.print(i + " ");
			}System.out.println();
		}
	
		
	}
	static int[] get(int n , int a , int b) {
		int arr[] = new int[n];
		arr[0] = a;
		for(int i = 1; i < n ;i++) {
			arr[i] = arr[i-1] + b; 
		}
		return arr;
	}
	
	static boolean valid(int i , int j) {
		return i>= 0 && i <j ;
	}
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}

		public long nextLong() {return Long.parseLong(next());}
 
		public double nextDouble() {return Double.parseDouble(next());}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
}
