package practice;

import java.util.Scanner;

public class longestpalindromicsubsequence {
	
	static Integer dp[][];
	
	static int go(String s , int i , int j) {
		
		// base case
		if(i == j)return dp[i][j] = 1;
		if(i > j)return 0;
		
		if(dp[i][j] != null) {
			return dp[i][j];
		}
		
		// subproblems
		int ans = -1;
		if(s.charAt(i) == s.charAt(j)) {
			ans = 2 + go(s,i+1,j-1);
		}else {
			ans = Math.max(ans, go(s,i+1,j));
			ans = Math.max(ans, go(s,i,j-1));
		}
		return dp[i][j] = ans;
		
	}

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		String s = sc.next();
		dp = new Integer[s.length()+ 5][s.length() +5];
		System.out.print(go(s , 0 , s.length() -1));
		
		sc.close();
	}

}
