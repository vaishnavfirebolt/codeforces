import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
 
public class B {
	static long mod = (long)1e9 + 7;
 
	public static void main(String[] args) {
		FastScanner sc  = new FastScanner();
		int n = sc.nextInt() , target = sc.nextInt() , pos = sc.nextInt();
		long ans = 1 , lower = target  -1, higher = n - target;
		int l = 0  , r = n;
		
		while(l < r) {
		    int mid = (l + r) / 2;
            if(mid == pos) {
                l = mid + 1;
            }
            else if(pos > mid) {
                ans *= lower;
                ans %= mod;
                lower--;
                l = mid + 1;
            }
            else {
                ans *= higher;
                ans %= mod;
                higher--;
                r = mid;
            }
		}
		if(higher < 0 || lower < 0) {
			ans = 0;
		}for(int i = 1 ; i<=lower + higher ; i++) {
			ans *= i;
			ans %= mod;
		}
		System.out.println(ans%mod);
	}
	
	
	public void sort(int[] a) {
		ArrayList<Integer> l=new ArrayList<>();
		for (int i:a) l.add(i);
		Collections.sort(l);
		for (int i=0; i<a.length; i++) a[i]=l.get(i);
	}
	
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		
		long nextLong() {
			return Long.parseLong(next());
		}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
 
}


