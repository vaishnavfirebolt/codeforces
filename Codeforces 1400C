import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;
import java.util.*;

public class C {
	public static void main(String[] args) {
		FastScanner sc = new FastScanner();
		int  t = sc.nextInt();
		for(int tt= 0 ; tt < t ;tt++) {
			char c[] = sc.next().toCharArray();
			int x = sc.nextInt();
			int n = c.length;
			char ans[] = new char[c.length];
			Arrays.fill(ans, '1');
			for (int i=0; i<n; i++) {
				if (c[i]=='0') {
					if (valid(i-x, n)) ans[i-x]='0';
					if (valid(i+x, n)) ans[i+x]='0';
				}
			}
			boolean works=true;
			for (int i=0; i<n; i++) {
				if (c[i]=='1') {
					if (valid(i-x, n) && ans[i-x]=='1') continue;
					if (valid(i+x, n) && ans[i+x]=='1') continue;
					works=false;
				}
			}
			if (!works) {
				System.out.println(-1);
			}
			else {
				System.out.println(ans);
			}
		}
	
	}
	
	static boolean valid(int i , int j) {
		return i>= 0 && i <j ;
	}
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}

		public long nextLong() {return Long.parseLong(next());}
 
		public double nextDouble() {return Double.parseDouble(next());}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
}
