package day34;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
import java.util.Collections;
import java.util.StringTokenizer;
 
public class Codefroces181A {
 
	public static void main(String[] args) {
		FastScanner sc=new FastScanner();
		int n = sc.nextInt() , m  = sc.nextInt();
		char a[][] = new char[n][m];
		for(int i = 0 ;i < n ;i++) {
			a[i] = sc.next().toCharArray();
		}
		int row = -1 , col = -1;
		for(int i = 0 ; i < n ; i++) {
			int count = 0;
			for(int j =0 ;j < m ;j++) {
				if(a[i][j] == '*')count++;
			}
			if(count ==1) {
				row = i;
			}
		}
		for(int i = 0 ; i < m ; i++) {
			int count = 0;
			for(int j =0 ;j < n ;j++) {
				if(a[j][i] == '*')count++;
			}
			if(count ==1) {
				col = i;
			}
		}
		System.out.println((row +1)+ " " + (col+1));
	}
	
	public void sort(int[] a) {
		ArrayList<Integer> l=new ArrayList<>();
		for (int i:a) l.add(i);
		Collections.sort(l);
		for (int i=0; i<a.length; i++) a[i]=l.get(i);
	}
	
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		
		long nextLong() {
			return Long.parseLong(next());
		}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
 
}


