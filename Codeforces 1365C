package day28;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
import java.util.Collections;
import java.util.StringTokenizer;
 
public class Codeforces1365C {
 
	static final int N = (int)2e5 + 5;
	static int a[] , b[] , c[];
	static Map<Integer , Integer> map ;
	
	public static void main(String[] args) {
		FastScanner sc=new FastScanner();
		
		int n = sc.nextInt();
		int a[]=new int[n+1];
	    int b[]=new int[n];
	    HashMap<Integer,Integer> map=new HashMap<>();
	    
	    for (int i=0;i<n;i++)a[sc.nextInt()]=i;
	    
	    for (int i=0;i<n;i++)b[i]=sc.nextInt();
	    
	    for (int i=0;i<n;i++){
	    	int z=a[b[i]];
	    	
	        if (z>=i)map.put(z - i, map.getOrDefault(z - i, 0) + 1);
	        else map.put(z+1+n-1-i,map.getOrDefault(z+1+n-1-i,0)+1);
	     }
	    
	    int ans=0;
	    for (int y:map.values())ans=Math.max(y,ans);
	    System.out.println(ans);

	}
	
	public void sort(int[] a) {
		ArrayList<Integer> l=new ArrayList<>();
		for (int i:a) l.add(i);
		Collections.sort(l);
		for (int i=0; i<a.length; i++) a[i]=l.get(i);
	}
	
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		
		long nextLong() {
			return Long.parseLong(next());
		}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
 
}
