import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
 
public class C {
	
	final static int MAXN = 100_005;
	final static long MOD = (long) 1e9 + 7;
	
	public static void main(String[] args) {
		FastScanner sc = new FastScanner();
		int t = sc.nextInt();
outer:	for(int tt= 0 ;tt < t ; tt++) {
			int n = sc.nextInt() ; int k = sc.nextInt();
			int a[] = sc.readArray(n);
			int min = a[0], max = a[0];
            for(int i = 1; i < n; i++) {
                if(i < n - 1) {
                    max = Math.min(a[i] + k - 1, max + k - 1);
                    min = Math.max(a[i], min - k + 1);
                    if(max < a[i] || min > a[i] + k - 1 || max < min) {
                        System.out.println("NO");
                        continue outer;
                    }
                }
                else {
                    max = Math.min(a[i], max + k - 1);
                    min = Math.max(a[i], min - k + 1);
                    if(max < a[i] || min > a[i] || max < min) {
                        System.out.println("NO");
                        continue outer;
                    }
                }
            }
            System.out.println("YES");
		}
	}
	
	
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		
		long nextLong() {
			return Long.parseLong(next());
		}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
 
}


