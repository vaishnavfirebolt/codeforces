import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
 
public class D {
	
	public static void main(String[] args) {
		FastScanner sc = new FastScanner();
		StringBuilder sb=new StringBuilder();
        int n = sc.nextInt();
        long ans = 0;
        HashMap<Long, Integer> even = new HashMap<>();
        HashMap<Long, Integer> odd = new HashMap<>();
        odd.put(0L, 1);
        long xor = 0;
        for(int i = 0; i < n; ++i) {
            long a = sc.nextLong();
            xor ^= a;
            if (i % 2 == 0) {
                if (even.get(xor) != null) {
                    ans += even.get(xor);
                    even.put(xor, even.get(xor) + 1);
                } else even.put(xor, 1);
            } else {
                if (odd.get(xor) != null) {
                    ans += odd.get(xor);
                    odd.put(xor, odd.get(xor) + 1);
                } else odd.put(xor, 1);
            }
        }
        System.out.println(ans);
    
	}
	
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
 
		public long nextLong() {return Long.parseLong(next());}
 
		public double nextDouble() {return Double.parseDouble(next());}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
}
