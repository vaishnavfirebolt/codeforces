package day49;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
import java.util.Collections;
import java.util.StringTokenizer;
 
public class Codeforces1390E {
 
	public static void main(String[] args) {
		FastScanner sc=new FastScanner();
		int T=sc.nextInt();
		for (int tt=0; tt<T; tt++) {
			int n = sc.nextInt();
			int[][] a = new int[n][n];
			for(int i=0;i<n;i++){
				String s = sc.next();
				char[] ch = s.toCharArray();
				for(int j = 0 ; j < n ; j++){
					a[i][j] = ch[j] - '0';
				}
			}
			boolean ans = true;
			for(int i=n-2;i>=0;i--){
				for(int j=n-2;j>=0;j--){
					if(a[i][j]==1 && a[i+1][j]!=1 && a[i][j+1]!=1){
						ans = false;
					}
				}
			} 
			System.out.println(ans? "YES":"NO");
		}
		
	}
	
	public void sort(int[] a) {
		ArrayList<Integer> l=new ArrayList<>();
		for (int i:a) l.add(i);
		Collections.sort(l);
		for (int i=0; i<a.length; i++) a[i]=l.get(i);
	}
	
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		
		long nextLong() {
			return Long.parseLong(next());
		}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
 
}


