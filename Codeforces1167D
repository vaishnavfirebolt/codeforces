import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class B {
	
	public static void main(String[] args) {
		FastScanner sc = new FastScanner();
		int te = sc.nextInt();
		for(int tt =0 ; tt < te; tt++) {
			int n = sc.nextInt() , k = sc.nextInt();
			int a[] = new int[n];
			int min = Integer.MAX_VALUE;
			Set<Integer> set = new HashSet<>();
			for(int i = 0 ;i < n ;i++) {
				a[i] = sc.nextInt();
				min = Math.min(min, a[i]);
				set.add(a[i]);
			}
			int diff = set.size();
			int m = 1;
			int p = k;
			while(k < diff && k != 1) {
				k = k * p;
				m++;
			}
			if(diff == 1) {
				System.out.println(1);
			}
			else if( k < diff) {
				System.out.println(-1);
			}else {
				System.out.println(m);
			}
		}
	}

	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}

		public long nextLong() {return Long.parseLong(next());}
 
		public double nextDouble() {return Double.parseDouble(next());}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
}
