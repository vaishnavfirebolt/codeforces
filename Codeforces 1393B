import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
import java.util.Collections;
import java.util.StringTokenizer;
 
public class Codeforces1393B {
 
	public static void main(String[] args) {
		FastScanner sc=new FastScanner();
		int n = sc.nextInt();
		int max =(int) 1e5 + 7;
		int count4 = 0;
		int count2 = 0;
		int a[] = new int[(int) (1e5 + 7)];
		for(int i = 0 ;i  < n ; i++) {
			a[sc.nextInt()]++;
		}
		for(int i = 0; i < max ; i++) {
			count2 += a[i]/2;
			count4 += a[i]/4;
		}
		int t = sc.nextInt();{
			for(int i = 0 ; i <  t ; i++) {
				char ch = sc.next().charAt(0);
				int newnum = sc.nextInt();
				count2 -= a[newnum]/2;
				count4 -= a[newnum]/4;
				if(ch == '-')a[newnum]--;
				else a[newnum]++;
				count2 += a[newnum]/2;
				count4 += a[newnum]/4;
				if(check(count2 , count4))System.out.println("Yes");
				else System.out.println("No");
			}
		}
		
	}
	static boolean check(int count2 , int count4) {
		if(count4 < 1) return false;
		else if((count4 -1) *2 + count2 - 2 >= 2) {
			return true;
		}else return false;
		
	}
	static boolean find(int a[] , int num) {
		for(int i = 0 ;i < a.length ;i++) {
			if(a[i] == num) {
				return true;
			}
		}
		return false;
	}
	static int abc(int a[] , int num) {
		for(int i = 0; i  < a.length ; i++) {
			if(num == a[i]) {
				return i;
			}
		}return -1;
	}
	public void sort(int[] a) {
		ArrayList<Integer> l=new ArrayList<>();
		for (int i:a) l.add(i);
		Collections.sort(l);
		for (int i=0; i<a.length; i++) a[i]=l.get(i);
	}
	
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		
		long nextLong() {
			return Long.parseLong(next());
		}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
 
}


