import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

 
public class B {
	
	final static int MAXN = 100_005;
	final static long MOD = (long) 1e9 + 7;
	
	public static void main(String[] args) {
		FastScanner sc = new FastScanner();
		int t = sc.nextInt();
		for(int tt = 0 ;tt< t;tt++) {
			int n = sc.nextInt();
			int a[] = sc.readArray(n);
			int m = sc.nextInt();
			int b[] = sc.readArray(m);
			int prea[] = new int[n];
			prea[0] = a[0];
			for(int i = 1 ; i< n ; i++) {
				prea[i] = prea[i-1] + a[i];
			}
			int preb[] = new int[m];
			preb[0] = b[0];
			for(int i = 1 ; i< m ; i++) {
				preb[i] = preb[i-1] + b[i];
			}
			int ans = Math.max(0,Math.max(prea[0], preb[0]));
			for(int i = 0 ; i < n ; i++) {
				for(int j = 0 ; j < m ; j++) {
					ans = Math.max(ans, Math.max(prea[i], Math.max(preb[j], prea[i] + preb[j])));
				}
			}
			System.out.println(ans);
		}
	}

	
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		
		long nextLong() {
			return Long.parseLong(next());
		}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
 
}


