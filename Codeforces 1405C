package day40;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
 
public class Codeforces1405C {
 
	public static void main(String[] args) {
		FastScanner sc=new FastScanner();
		int T=sc.nextInt();
	for (int tt=0; tt<T; tt++) {
			int n = sc.nextInt();
			int k = sc.nextInt();
			char a[] = sc.next().toCharArray();
			boolean p[] = new boolean[k];
			boolean q[] = new boolean[k];
			for(int i = 0 ; i < n ;i++) {
				if(a[i] == '1' )p[i % k] = true;
				if(a[i] == '0' )q[i % k] = true;
			}
			boolean works = true;
			for(int i = 0; i < k ; i++) {
				if(p[i] && q[i])works = false;
			}
			int c0 = 0  , c1 = 0;
			for(int i = 0 ;i < k ; i++) {
				if(p[i] )c1++;
				else if(q[i]) c0++;
			}
			if(c0 * 2 > k || c1  * 2> k) works = false;
			System.out.println(works?"YES":"NO");
		}
		
	}
	
	public void sort(int[] a) {
		ArrayList<Integer> l=new ArrayList<>();
		for (int i:a) l.add(i);
		Collections.sort(l);
		for (int i=0; i<a.length; i++) a[i]=l.get(i);
	}
	
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		
		long nextLong() {
			return Long.parseLong(next());
		}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
 
}



