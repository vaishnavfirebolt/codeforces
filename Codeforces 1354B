package day49;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
import java.util.Collections;
import java.util.StringTokenizer;
 
public class Codeforces1354B {
 
	public static void main(String[] args) {
		FastScanner sc=new FastScanner();
		int t=sc.nextInt();
		while(t-->0) {
		HashMap<Character,Integer> map=new HashMap<>();
		int ans=Integer.MAX_VALUE;
		String str=sc.next();
		for(int i=0;i<str.length();i++) {
			if(map.containsKey(str.charAt(i)))
				map.put(str.charAt(i),i);
			else
				map.put(str.charAt(i),i);
			
			if(map.size()==3) {
				int a = map.get('1');
				int b = map.get('2');
				int c = map.get('3');
				int low = Math.min(a,Math.min(b,c));
				int high = Math.max(a,Math.max(b,c));
				if(ans > (high - low + 1)) {
					ans = high - low + 1;
				}
			}
				
		}
		if(ans!=Integer.MAX_VALUE)
		System.out.println(ans);
		else
		System.out.println("0");	
		 }  
	}
	public void sort(int[] a) {
		ArrayList<Integer> l=new ArrayList<>();
		for (int i:a) l.add(i);
		Collections.sort(l);
		for (int i=0; i<a.length; i++) a[i]=l.get(i);
	}
	
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		
		long nextLong() {
			return Long.parseLong(next());
		}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
 
}


