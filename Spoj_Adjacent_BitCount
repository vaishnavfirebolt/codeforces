package Spoj;

import java.util.Arrays;
import java.util.Scanner;

public class Spoj_Adjacent_BitCount {
	
	static int dp[][][] = new int[105][105][2];
	
	static int go(int n , int k , int bit) {
		if(k <0)return 0;
		if(n == 0)return 0;
		if(n == 1) {
			if(k == 0) {
				return 1;
			}else if(k<0)return 0;
			else return 0;
		}
		
		if(dp[n][k][bit] != -1) {
			return dp[n][k][bit];
		}
		int ans = -1;
		if(bit == 1) {
			ans = go(n-1,k-1 ,1) + go(n-1,k,0);
		}else ans = go(n-1,k,1) + go(n-1,k,0);
		
		return dp[n][k][bit] = ans;
	}

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		StringBuilder sb = new StringBuilder();
		int t = sc.nextInt();
		for(int tt = 0 ; tt < t ;tt++) {
			int p = sc.nextInt();int n = sc.nextInt() , k = sc.nextInt();
			for(int i = 0 ; i <= n ; i++) {
				for(int j = 0 ; j <= k ; j++ ) {
					Arrays.fill(dp[i][j], -1);
				}
			}
			int ans = go(n,k,1);
			ans += go(n,k,0);
			sb.append((p) + " " + ans +"\n");
		}
		System.out.println(sb);
		sc.close();
	}

}
