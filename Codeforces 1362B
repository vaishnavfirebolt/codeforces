package day28;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
import java.util.Collections;
import java.util.StringTokenizer;
 
public class Codeforces1362B {
 
	public static void main(String[] args) {
		FastScanner sc=new FastScanner();
		int T=sc.nextInt();
		for (int tt=0; tt<T; tt++) {
			int n=sc.nextInt();
			int[] s=new int[n];
			int max=0;
			
			for(int i=0;i<n;i++){
				s[i]=sc.nextInt();
				max=Math.max(max,s[i]);
			}
			max=Integer.highestOneBit(max)<<1;
			max--;
			
			boolean found=false;
			boolean[] present;
			
			for(int i=1;i<=max;i++){
				present=new boolean[1030];
				for(int j=0;j<n;j++)present[s[j]^i]=true;
				boolean z=true;
				for(int j=0;j<n;j++){
					if(!present[s[j]]){
						z=false;
						break;
					}
				}
				if(z){
					System.out.println(i);
					found=true;
					break;
				}
			}
			if(!found)System.out.println("-1");
		}
	}
	
	public void sort(int[] a) {
		ArrayList<Integer> l=new ArrayList<>();
		for (int i:a) l.add(i);
		Collections.sort(l);
		for (int i=0; i<a.length; i++) a[i]=l.get(i);
	}
	
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		
		long nextLong() {
			return Long.parseLong(next());
		}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
 
}
