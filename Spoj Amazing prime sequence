package practice;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
import java.util.Collections;
import java.util.StringTokenizer;
 
public class SpojAPS {
	
	static int prime[] = new int[10000007];
	static long ans[] = new long[10000007];
	
	static void fn() {
		for(int i=2;i<=10000000;i++) {
			if(prime[i] == 0) {
				prime[i] = i;
				for(long j = i *(long) i ; j <= 10000000 ;j += i) {
					if ( j > 10000000)System.out.println(j);
					if(prime[(int)j] == 0) {
						prime[(int)j] = i;
					}
				}
			}
		}
		for(int i = 2 ; i <= 10000000; i++){
			ans[i] = ans[i -1] + prime[i]  ; 
		}
	}
 
	public static void main(String[] args) {
		FastScanner sc=new FastScanner();
		int T=sc.nextInt();
		
		fn();
		for (int tt=0; tt<T; tt++) {
			int n = sc.nextInt();
			System.out.println(ans[n]);
		}
		
	}
	
	public void sort(int[] a) {
		ArrayList<Integer> l=new ArrayList<>();
		for (int i:a) l.add(i);
		Collections.sort(l);
		for (int i=0; i<a.length; i++) a[i]=l.get(i);
	}
	
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		
		long nextLong() {
			return Long.parseLong(next());
		}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
 
}


