import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
 
public class C {
 
	public static void main(String[] args) {
		FastScanner sc = new FastScanner();
		int t = sc.nextInt() ; 
		for(int tt = 0 ;tt < t; tt++) {
			int ans = 0;
			int n = sc.nextInt() , k = sc.nextInt();
			char a[] = sc.next().toCharArray();
			
			for(int i = 0 ; i < k/2 ; i++) {
				int freq[] = new int[26];
				for(int start = 0 ; start + k -1 < n ; start+= k) {
					int first = start + i ;
					int last = start + k - 1 - i;
					freq[a[first] - 'a']++;
					freq[a[last] - 'a']++;
				}
				int totaltochange = 2 * (n/k);
				Arrays.sort(freq);
				ans += totaltochange - freq[25];
			}
			
			if((k&1) == 1) {
				int freq[] = new int[26];
				for(int start = k/2 ; start < n ; start+= k) {
					freq[a[start] - 'a']++;
				}
				int totaltochange = (n/k);
				Arrays.sort(freq);
				ans += totaltochange - freq[25];
			}
			System.out.println(ans);
		}
	}
	
	public void sort(int[] a) {
		ArrayList<Integer> l=new ArrayList<>();
		for (int i:a) l.add(i);
		Collections.sort(l);
		for (int i=0; i<a.length; i++) a[i]=l.get(i);
	}
	
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		
		long nextLong() {
			return Long.parseLong(next());
		}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
 
}


