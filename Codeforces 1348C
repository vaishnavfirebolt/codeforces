import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class C {
	
	public static void main(String[] args) {
		FastScanner sc = new FastScanner();
		int t = sc.nextInt();
		for(int tt = 0; tt < t ;tt++) {
			int n = sc.nextInt(); int k = sc.nextInt();
			char a[] = sc.next().toCharArray();
			Arrays.sort(a);
			
			if(a[0] != a[k-1] || k == n) {
				System.out.println(a[k-1]);
				continue;
			}
			
			else {
				if(a[k] == a[n-1]) {
					int diff = n - k ;
					System.out.print(a[0]);
					for(int i = 0 ; i < diff / k ; i++) {
						System.out.print(a[k]);
					}
					if(diff % k != 0 ) {
						System.out.print(a[k]);
					}
					System.out.println();
				}
				else {
					System.out.print(a[0]);
					for(int i = k ; i < n ; i++) {
						System.out.print(a[i]);
					}
					System.out.println();
				}
			}
		}
	}	
	
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}

		public long nextLong() {return Long.parseLong(next());}
 
		public double nextDouble() {return Double.parseDouble(next());}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
}
