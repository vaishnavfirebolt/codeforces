import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class C {
	
	public static void main(String[] args) {
		FastScanner sc = new FastScanner();
		int t = sc.nextInt();
		for(int tt = 0; tt < t ;tt++) {
			int a = sc.nextInt() , b = sc.nextInt() , q = sc.nextInt();
			if(a > b) {
				int temp = a;
				a = b;
				b = temp;
			}
			int lcm = a * b / gcd(a,b);
			int s = lcm - b;
			for(int i = 0 ; i < q ; i++) {
				long l = sc.nextLong() , r = sc.nextLong();
				long x = (( l - 1) / lcm) * s;
                long x1 = (l - 1) % lcm;
                if(x1 >= b) x += (x1 - b + 1);
 
                long y=(r/lcm)*s;
                long y1=r%lcm;
                if(y1>=b)y+=(y1-b+1);
                
                System.out.print(y - x + " ");
			}
			System.out.println();
		}
	}	
	 static int gcd(int a,int b){
	        if(b==0)return a;
	        else return gcd(b,a%b);
	 }
	
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}

		public long nextLong() {return Long.parseLong(next());}
 
		public double nextDouble() {return Double.parseDouble(next());}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
}
