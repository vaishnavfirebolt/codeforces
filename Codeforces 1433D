import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
 
public class D {
	static int a[];
	static boolean visited[];
	static int n;
 
	public static void main(String[] args) {
		FastScanner sc = new FastScanner();
		int t = sc.nextInt();
		for(int tt =0 ;tt < t ; tt++) {
			 n = sc.nextInt();
			a = sc.readArray(n);
			boolean equal = true;
			for(int i = 1; i< n ; i++) {
				if(a[i] != a[i-1])equal = false;
			}
			if(equal) {
				System.out.println("NO");
			}else {
				System.out.println("YES");
				int k = a[0];
				int l = -1;
				for(int i = 1 ; i < n ; i++) {
					if(a[i] != k) {
						System.out.println(1+" "+(i+1));
						l = i;
					}
				}
				for(int i = 1 ; i< n ; i++) {
					if(a[i] == k) {
						System.out.println(l +1 + " " +(i+1));
					}
				}
			}
		}
	}
	
	public void sort(int[] a) {
		ArrayList<Integer> l=new ArrayList<>();
		for (int i:a) l.add(i);
		Collections.sort(l);
		for (int i=0; i<a.length; i++) a[i]=l.get(i);
	}
	
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		
		long nextLong() {
			return Long.parseLong(next());
		}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
 
}


