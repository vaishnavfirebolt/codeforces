import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigInteger;
import java.util.*;

public class D {
	
	public static void main(String[] args) {
		FastScanner sc = new FastScanner();
		int n = sc.nextInt();
		int a[] = sc.readArray(n);
		if(n == 1) {
			System.out.println(0);
			System.out.println(a[0]);
			return;
		}
		if(n == 2) {
			System.out.println(0);
			System.out.println(a[0] + " "+ a[1]);
			return;
		}
		
		Arrays.sort(a);
		int i = 0 ;int j = n-1;
		if(n % 2 == 1) {
		System.out.println(n/2);
		}
		else System.out.println(n/2 -1);
		while(i <= j) {
			if(i == j) {
				System.out.print(a[i]);
			}else {
				System.out.print(a[j]+" " + a[i] + " ");
			}
			i++;
			j--;
		}
	
	}
	
	
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}

		public long nextLong() {return Long.parseLong(next());}
 
		public double nextDouble() {return Double.parseDouble(next());}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
}
