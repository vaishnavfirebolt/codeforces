package day39;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
import java.util.Collections;
import java.util.StringTokenizer;
 
public class Codeforces478B {
	
	static long pair(int n) {
		return((long)n * (n - 1))/2;
	}
 
	public static void main(String[] args) {
		FastScanner sc=new FastScanner();
		int n = sc.nextInt(), m = sc.nextInt();
		long max = 0;
		int c = n - (m - 1);
//		System.out.println(c);
		max = ((long)c * (c - 1))/2;
		
		long min = 0;
//		int a[] = new int[m];
//		for(int i = 0 ; i < n ; i++) {
//			a[i % m]++;
//		}
//		for(int i = 0 ;i < m ; i++) {
//			min += ((long)a[i] * (a[i] - 1))/2;
//		}
		
		int remainder = n%m;
		int quotient = n/m;
		
		long d = (m - remainder) * pair(quotient);
		long e = remainder * pair(quotient  + 1);
		
		min = d + e;
		
		System.out.println(min + " " + max);
	}
	
	public void sort(int[] a) {
		ArrayList<Integer> l=new ArrayList<>();
		for (int i:a) l.add(i);
		Collections.sort(l);
		for (int i=0; i<a.length; i++) a[i]=l.get(i);
	}
	
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		
		long nextLong() {
			return Long.parseLong(next());
		}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
 
}


