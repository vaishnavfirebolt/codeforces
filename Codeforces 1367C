package day26;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
import java.util.Collections;
import java.util.StringTokenizer;
 
public class Codeforces1367C {
	static char[] s;
//	
//	static boolean isvalid( int i , int k) {
//		boolean works = true;
//		for(int j = i-1 ; j >=  i- k ; j--) {
//			if(j >= 0) {
//				if(a[j] != '0') {
//					works = false;
//					break;
//				}
//			}else break;
//		}
//		if(works == false)return false;
//		for(int j = i+1 ; j <=  i+k ; j++) {
//			if(j <=  a.length -1) {
//				if(a[j] != '0') {
//					works = false;
//					break;
//				}
//			}else break;
//		}
//		if(works) {
//			return true;
//		}else return false;
//	}
 
	public static void main(String[] args) {
		FastScanner sc=new FastScanner();
		int T=sc.nextInt();
		for (int tt=0; tt<T; tt++) {
			int n = sc.nextInt();
			int k = sc.nextInt();
			s = sc.next().toCharArray();
			int res = 0;

			for (int i = 0; i < n;) {
				int j = i + 1;

				for (; j < n && s[j] != '1'; j++);

				int left = s[i] == '1' ? k : 0;
				int right = j < n && s[j] == '1' ? k : 0;
				int len = j - i;

				if (left == k) {
					len--;
				}

				len -= left + right;

				if (len > 0) {
					res += (len + k) / (k + 1);
				}

				i = j;
			}

			System.out.println(res);
		}
		
	}
	
	public void sort(int[] a) {
		ArrayList<Integer> l=new ArrayList<>();
		for (int i:a) l.add(i);
		Collections.sort(l);
		for (int i=0; i<a.length; i++) a[i]=l.get(i);
	}
	
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		
		public String next() {
			while (!st.hasMoreElements())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		
		long nextLong() {
			return Long.parseLong(next());
		}
		
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
	}
 
}
